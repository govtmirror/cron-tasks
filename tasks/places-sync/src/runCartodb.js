var Bluebird = require('datawrap').Bluebird,
  run = require('./runCartodbType'),
  runList = require('datawrap').runList;

module.exports = function(types) {
  var finished = false;
  var taskList = [];
  types.map(function(type) {
    taskList.push({
      'name': 'CartoDB ' + type + ' task',
      'task': run,
      'params': type
    });
  });
  return new Bluebird(function(resolve, reject) {
    runList(taskList, 'runCartodb.js')
      .then(function(r) {
        if (finished) {
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
          console.log('***************************************************');
        } else {
          finished=true;
        }
        resolve(r);
      })
      .catch(function(e) {
        reject(e);
      });
  });
};
